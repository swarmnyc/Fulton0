/** Declaration file generated by dts-gen */

declare module "koa-oauth-server" {
    interface IOAuthAccessToken {
        accessToken: string
        accessTokenExpiresOn: Date
        clientId: number | string  
    }

    interface IOAuthClient {
        grants: string[]
    }

    interface IOAuthRevokedObject {
        expiresAt: string | Date
    }

    interface IOAuthAuthorizationCode {
        authorizationCode: string
    }

    interface IOAuthModel {
        getAccessToken: (...arguments) => Promise<IOAuthAccessToken>
        getClient: (...arguments) => Promise<IOAuthClient>
        generateAccessToken?: (...arguments) => Promise<string>
        generateAuthorizationCode?: (...arguments) => Promise<string>
        generateRefreshToken?: (...arguments) => Promise<string>
        revokeAuthorizationCode?: (...arguments) => Promise<IOAuthRevokedObject>
        saveAuthorizationCode?: (...arguments) => Promise<IOAuthAuthorizationCode>
        validateScope?: (...arguments) => boolean
    }

    interface IKoaOAuthOptions {
        model: IOAuthModel 
        grants?: string[]
        debug?: boolean
    }

    export = class KoaOauthServer {
        constructor(config: IKoaOAuthOptions);
        authorise(): any;
        grant(): any;
        token(): any;
    }


    // function koa_oauth_server(opts?: IKoaOAuthOptions): KoaOauthServer;
    // namespace koa_oauth_server {}
    //const KoaOauthServer: OauthServer.KoaOauthServer;
    //export = OauthServer;
}
