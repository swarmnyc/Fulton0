// Adapted from koa-bodyparser definition which was generated by typings
// Source: https://raw.githubusercontent.com/DefinitelyTyped/DefinitelyTyped/27986da0aa5f78c596bd8068b3e617b9c55b7137/koa-bodyparser/koa-bodyparser.d.ts
declare module "koa-cors" {

    import * as Koa from "koa";

    function cors(opts?: {
        /**
         * requested encoding. Default is utf-8 by co-body
         */
        encode?: string;

        /**
         * limit of the urlencoded body. If the body ends up being larger than this limit
         * a 413 error code is returned. Default is 56kb
         */
        formLimit?: string;

        /**
         * limit of the json body. Default is 1mb
         */
        jsonLimit?: string;

        /**
         * when set to true, JSON parser will only accept arrays and objects. Default is true
         */
        strict?: boolean;

        /**
         * custom json request detect function. Default is null
         */
        detectJSON?: (ctx: Koa.Context) => boolean;

        /**
         * support extend types
         */
        extendTypes?: {
            json?: string[];
            form?: string[];
        }

        /**
         * support custom error handle
         */
        onerror?: (err: Error, ctx: Koa.Context) => void;
    }): { (ctx: Koa.Context, next?: () => any): any };

    namespace cors {}
    export = cors;
}
